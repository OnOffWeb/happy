<?php

function happy_user_menu() {
  $items = array();

  $items['user/%/contrib'] = array(
    'title' => 'Contributions',
    'page callback' => 'happy_user_contrib',
    'access arguments' => array('access content'),
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Implement hook_block_info().
 */
function happy_user_block_info(){

$blocks = array();

	$blocks['happy_user_search'] = array(
			'info' => t('Search user'),
			'region' => 'content',
			'weight' => -15,
			'status' => 1,
			'properties' => array('administrative' => TRUE),
			'cache' => DRUPAL_CACHE_GLOBAL,
			'visibility' => BLOCK_VISIBILITY_LISTED,
			'pages' => implode('\n', array(
				"admin/people")
      ),
		);

return $blocks;


}
// happy_user_block_info()


/**
 * Implement hook_block_view().
 */
function happy_user_block_view($delta){
	$block = array();

	switch ($delta) {

		case 'happy_user_search':
			// if current user have right to use this block
			if(user_access('user happy block')){
				//$block['subject'] = t('Search user');
				$block['content'] = drupal_get_form('happy_user_form');
				drupal_add_css(drupal_get_path('module', 'happy_user') . '/css/happy_user.css');
			}// if()
			break;

	}//switch()

	return $block;

}
// happy_user_block_view()


/**
 * Implement hook_permission().
 */
function happy_user_permission() {

  return array(
    'happy user block' => array(
      'title' => t('Use block user search'),
      'description' => t('Display search block in \'admin/people\' page.'),
    ),
  );

}
// happy_user_permission()


function happy_user_contrib() {

// Add required JavaScript and Stylesheet.
  drupal_add_library('system', 'drupal.vertical-tabs');
  $output = NULL;

  $build['contribution'] = array(
    '#type' => 'vertical_tabs',
  );

  $entities = entity_get_info();

  dbug($entities);

// Add required JavaScript and Stylesheet.
  drupal_add_library('system', 'drupal.vertical-tabs');

  foreach ($entities as $key => $entity) {
    if (isset($entity['schema_fields_sql']['base table'])) {
      $table = array();

      $build[$key] =  array(
        '#type'   => 'fieldset',
        '#title'  => $entity['label'],
        '#value' => theme('table', $table),
        '#group'  => 'contribution',
      );
    }
  }

  return array(
    '#markup' => theme('vertical_tabs', array(
      'element' => array(
        '#children' => render($build),
      ),
    )));
  return $build;
}

/**
 * Generate form to find user.
 */
function happy_user_form() {
	$access = user_access('access user profiles');
	$administer = user_access('administer users');

	// if current user have right to view or edit profiles
	if($access || $administer){
		$form = array();

		$form['search'] = array(
			'#type' => 'fieldset',
			'#title' => t('Search user'),
		);
		$form['search']['name'] = array(
		  '#type' => 'textfield',
		  '#title' => t('Search user'),
		  '#maxlength' => 60,
		  '#size' => 30,
		  '#autocomplete_path' => 'user/autocomplete',
		  '#weight' => -1,
		  '#description' => t('Search user by user name.'),
		);

		if($access)
			$form['search']['submit_view'] = array('#type' => 'submit', '#value' => t('View'));
		if($administer)
			$form['search']['submit_edit'] = array('#type' => 'submit', '#value' => t('Edit'));

		return $form;

	}// if()

}
// happy_user_form()


/**
 * Implement hook_submit().
 * Redirect admin to edit page of the given user by the form
 */
function happy_user_form_submit($form, &$form_state){
	$account_name = $form_state['input']['name'];

	// Only if the given variable is a string
	if(is_string($account_name)){

		// In case of given variable is a list delimited by comma
		$explode = explode(',', $account_name);
		$account_name = $explode[0];

		switch (strtolower($form_state['input']['op'])) {
			case 'view':
				$form_state['redirect'] = 'users/' . $account_name;
				break;

			case 'edit':
				$form_state['redirect'] = 'user/' . user_load_by_name($account_name)->uid . '/edit';
				break;

		}// switch()

	}// if()

}
// user_happy_form_submit()
