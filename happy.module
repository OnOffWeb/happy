<?php

/**
 * @file
 * The main file of the module.
 */

// Include files utilities.
module_load_include('inc', 'happy_user');
module_load_include('inc', 'happy_role');
module_load_include('inc', 'happy_taxonomy');
module_load_include('inc', 'happy_node');


/**
 * Implements hook_theme().
 */
function happy_theme($existing, $type, $theme, $path) {
  return array(
    'image_style_outside_files' => array(
      'variables' => array(
        'style_name' => NULL,
        'path' => NULL,
        'alt' => '',
        'title' => NULL,
        'attributes' => array(),
      ),
    ),
  );
}

/**
 * This theme function is designed to deal with the limitation that
 * theme_image_style does not work with images outside the files directory.
 * Origin : http://www.pepperpotdesign.co.uk/blog/rendering-drupal-7-image-styles-outside-of-the-fil/
 *
 * Usage is the same as theme_image_style.
 *
 * @param $variables
 */
function theme_image_style_outside_files($variables) {
  $styled_path = image_style_path($variables['style_name'], $variables['path']);
  if (!file_exists($styled_path)) {
    $style = image_style_load($variables['style_name']);
    image_style_create_derivative($style, $variables['path'], $styled_path);
  }
  $variables['path'] = $styled_path;
  return theme('image', $variables);
}


// Common debug function
define('DBUG_EXPORT', 'var_export');
define('DBUG_DUMP', 'var_dump');
define('DBUG_PRINT', 'print_r');
define('DBUG_WATCHDOG', 'watchdog');
define('DBUG_KEYS', 'array_keys');
define('DBUG_BACKTRACE', 'debug_backtrace');
define('DBUG_P_BACKTRACE', 'debug_print_backtrace');

// The Default debugging function, feel free to pickup your favorite one!
define('DBUG_DEFAULT', DBUG_PRINT);

/**
* Custom debug function : Usual and classic debugging function.
*
* @param mixed $obj Variable to debug
* @param bool $end Set to TRUE to terminate function
* @param string $method Debug method
* - DBUG_DEFAULT : Default debugging function
* - DBUG_EXPORT : var_export
* - DBUG_DUMP : var_dump
* - DBUG_PRINT : print_r
* - DBUG_WATCHDOG : watchdog
* - DBUG_KEYS : array_keys
*
* @TODO Improve Documentation
*
*/
function dbug($obj = NULL, $end = TRUE, $method = DBUG_DEFAULT) {

  // Watchdog method : no die().
  if ($method == DBUG_WATCHDOG) {
    $method ('dbug_custom', serialize ($obj));
  }
  else {

    // Output.
    print ('<pre>');
    if ($method == DBUG_KEYS) {
      // Ouput with array_keys method.
      print_r ($method ((array) $obj));
    }
    else {
      // Ouput with the giving method.
      $method ($obj);
    }
    print ('</pre>');

    // Die... not Today !
    if ($end || is_null ($end)) {
      drupal_exit();;
    }
  }
}

/**
* An extra debug function to show backtrace informations
*
* @param string $method
* - DBUG_BACKTRACE : debug_backtrace
* - DBUG_P_BACKTRACE : debug_print_backtrace
* Don't hesitated to try function why DBUG_P_BACKTRACE parameter
*
* @TODO Improve Documentation
*
*/
function dback ($method = DBUG_BACKTRACE) {

  // Output.
  print ('<pre>');
  print_r ($method(DEBUG_BACKTRACE_IGNORE_ARGS));
  print ('</pre>');

  // Exit.
  drupal_exit();
}